# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data - m_data$subject_id[!m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!m_data$subject_id %in% col_names]
new_data
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!m_data$subject_id %in% col_names]
new_data
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[- col_names %in% m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-col_names%in%m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!col_names%in%m_data$subject_id]
new_data
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!col_names%in%m_data$subject_id]
new_data
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!col_names%in%m_data$subject_id]
print(new_data)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!col_names%in%m_data$subject_id]
print(new_data)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-col_names%in%m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-col_names%in%m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[- col_names %in% m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[col_names %in% m_data$subject_id]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-!m_data$subject_id %in% col_names]
print(new_data)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[-m_data$subject_id %in% col_names]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
#new_data = m_data[-m_data$subject_id %in% col_names]
#print(new_data)
print(-m_data$subject_id %in% col_names)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
#new_data = m_data[-m_data$subject_id %in% col_names]
#print(new_data)
print(m_data$subject_id %in% col_names)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
#new_data = m_data[-m_data$subject_id %in% col_names]
#print(new_data)
print(!(m_data$subject_id %in% col_names))
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data = m_data[!(m_data$subject_id %in% col_names)]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data$subject_id[!(m_data$subject_id %in% col_names)]
print(new_data)
#print(!(m_data$subject_id %in% col_names))
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <-m_data %>% m_data$subject_id[!(m_data$subject_id %in% col_names)]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data$subject_id %>% m_data$subject_id[!(m_data$subject_id %in% col_names)]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data$subject_id[!(m_data$subject_id %in% col_names)]
print(new_data)
print(!(m_data$subject_id %in% col_names))
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[,!(m_data$subject_id %in% col_names)]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
print(new_data)
#print(!(m_data$subject_id %in% col_names))
print(col_names)
a<- df(1,2,3,4,5)
a
a<- c(1,2,3,4,5)
a
a<- c(1,2,3,4,5)
a[T,F,T,T,T]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
print(new_data)
print(col_names)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
print(new_data)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
print(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
print(new_data)
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
a
a[,0]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
a[,0]
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
print(a[,0])
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
print(a[,1])
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
print(a[1,])
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
print(a[2,])
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a >= 5, arr.ind=T)
print(a[3,])
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a[3,] >= 5, arr.ind=T)
print(a[3,])
c
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
c <- which(a[3,] >= 5, arr.ind=T)
#print(a[3,])
c
#add exclusion criteria
e_data <- group_by(m_data, subject_id) %>% filter(trial_name == "ratingScaleTask")
e_data <- subset(e_data,select = c(response, subject_id))
#CHECK 95% the same answer
# get matrix that shows how often a subject clicked each level of vividness
a <- table(e_data) %>% as.data.frame.matrix(a)
# check if one level was chosen more than 95% (>= 33) and safe index
b <- which(a >= 32, arr.ind=T)
# save name of columns that have to be deleted
col_names <-colnames(a[unique(b[,"col"])])
new_data <- m_data[!(m_data$subject_id %in% col_names),]
# CHECK IF 5 or more time "i dont know the answer was choosen
row <-3
c <- which(a[row,] >= 5, arr.ind=T)
#print(a[3,])
c
